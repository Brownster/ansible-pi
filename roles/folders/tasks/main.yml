---
# Create media/download directory structure and Docker app directories

- name: Ensure base media root exists
  file:
    path: "{{ media_root }}"
    state: directory
    owner: "{{ main_user }}"
    group: "{{ main_group }}"
    mode: "0775"

- name: Ensure media subfolders exist
  file:
    path: "{{ media_root }}/{{ item }}"
    state: directory
    owner: "{{ main_user }}"
    group: "{{ main_group }}"
    mode: "0775"
  loop: "{{ media_dirs }}"

- name: Ensure downloads root exists
  file:
    path: "{{ downloads_root }}"
    state: directory
    owner: "{{ main_user }}"
    group: "{{ main_group }}"
    mode: "0775"

- name: Ensure downloads subfolders exist
  file:
    path: "{{ downloads_root }}/{{ item }}"
    state: directory
    owner: "{{ main_user }}"
    group: "{{ main_group }}"
    mode: "0775"
  loop: "{{ downloads_dirs }}"

- name: Ensure mediastack root exists
  file:
    path: "{{ mediastack_root }}"
    state: directory
    owner: "{{ main_user }}"
    group: "{{ main_group }}"
    mode: "0775"

- name: App-specific folders for dockerized services
  file:
    path: "{{ mediastack_root }}/{{ item }}"
    state: directory
    owner: "{{ main_user }}"
    group: "{{ main_group }}"
    mode: "0775"
  loop:
    - vpn
    - jackett
    - sonarr
    - radarr
    - lidarr
    - transmission
    - rdtclient
    - sabnzbd/config
    - get_iplayer/config
    - lazylibrarian
    - audiobookshelf/config
    - audiobookshelf/metadata
    - navidrome
    - jellyfin
    - pi-health
    - requestrr/config

- name: Set setgid bit on media root so new files keep group
  file:
    path: "{{ media_root }}"
    mode: "u=rwx,g=rwx,o=rx,g+s"
    state: directory

- name: Apply default ACL on media root for group write access
  acl:
    path: "{{ media_root }}"
    default: true
    etype: group
    entity: "{{ main_group }}"
    permissions: rwX
    state: present
